{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { User } from '../user';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../user.service\";\nimport * as i3 from \"@angular/forms\";\n//import { AuthService } from '../auth.service';\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor( /*private _service : AuthService*/_router, _service1, route) {\n      this._router = _router;\n      this._service1 = _service1;\n      this.route = route;\n      this.msg = '';\n      this.loginform = new FormGroup({\n        emailId: new FormControl('', [Validators.required, Validators.email]),\n        password: new FormControl('', [Validators.required])\n      });\n      this.user = new User();\n      this.user1 = new User();\n    }\n    // getting the form control elements\n    get password1() {\n      return this.loginform.controls['password'];\n    }\n    get emailId() {\n      return this.loginform.get('emailId');\n    }\n    get password() {\n      return this.loginform.get('password');\n    }\n    login() {\n      //console.log(this.loginform.value);\n      this.loginUser();\n    }\n    ngOnInit() {}\n    getdata() {\n      this.user1.emailId = this.user.emailId;\n      this._service1.getUserbyemailId(this.user1.emailId).subscribe(data => {\n        this.user1.user_role = data.user_role;\n      });\n    }\n    loginUser() {\n      this.getdata();\n      this._service1.LoginUserFromRemote(this.user).subscribe(data => {\n        this.getdata();\n        // console.log(this.user1.user_role,\"User_Role\");\n        if (this.user1.user_role === \"admin\") {\n          this._router.navigate(['/admin/dashboard']);\n        } else {\n          this._router.navigate(['/popularplans']);\n        }\n      }, error => {\n        console.log(\"exception occured\");\n        this.msg = \"Bad Credentials, please enter valid emailId and password\";\n      });\n    }\n    onSubmit() {\n      console.log(this.user);\n      this.loginUser();\n    }\n  }\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i1.ActivatedRoute));\n  };\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 23,\n    vars: 4,\n    consts: [[1, \"bg\"], [1, \"sidenav\", \"col-md-6\", \"offset-md-3\"], [1, \"main-head\", \"text-center\", \"font-weight-bolder\", \"text-white\"], [3, \"ngSubmit\"], [\"LoginForm\", \"ngForm\"], [1, \"text-danger\"], [1, \"form-group\", \"font-weight-bold\", \"text-white\"], [\"type\", \"text\", \"id\", \"emailId\", \"name\", \"emailId\", \"placeholder\", \"Enter EmailId\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"placeholder\", \"Enter the password\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"form-group\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", 3, \"disabled\"], [1, \"text-white\"], [\"href\", \"/signup\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"h3\", 2);\n        i0.ɵɵtext(3, \" Login \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"form\", 3, 4);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_4_listener() {\n          return ctx.login();\n        });\n        i0.ɵɵelementStart(6, \"small\", 5);\n        i0.ɵɵtext(7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 6)(9, \"label\");\n        i0.ɵɵtext(10, \" Email Id\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"input\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_11_listener($event) {\n          return ctx.user.emailId = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"div\", 6)(13, \"label\");\n        i0.ɵɵtext(14, \" Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"input\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_15_listener($event) {\n          return ctx.user.password = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"div\", 9)(17, \"button\", 10);\n        i0.ɵɵtext(18, \"Submit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"p\", 11);\n        i0.ɵɵtext(20, \"I already have an account. \");\n        i0.ɵɵelementStart(21, \"a\", 12);\n        i0.ɵɵtext(22, \"SignUp\");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(5);\n        i0.ɵɵadvance(7);\n        i0.ɵɵtextInterpolate(ctx.msg);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.user.emailId);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.user.password);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", !_r0.form.valid);\n      }\n    },\n    dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n    styles: [\".bg[_ngcontent-%COMP%]{background:url(bg_img_login.jpg);min-height:100%;min-width:100%;background-size:100%;background-repeat:no-repeat;position:absolute;overflow-y:hidden;overflow-x:hidden}.form-group[_ngcontent-%COMP%]{border:1px;padding:0 5px;margin-top:5vh}.main-head[_ngcontent-%COMP%]{height:20px}.sidenav[_ngcontent-%COMP%]{height:100%;overflow-x:hidden;padding-top:40px;box-shadow:10px 11px 26px 1px #000000bf}.btn[_ngcontent-%COMP%]{background-color:#f30a0af8!important;color:#fff}.ng-valid[required][_ngcontent-%COMP%], .ng-valid.required[_ngcontent-%COMP%]{border-left:5px solid #42A948}.ng-invalid[_ngcontent-%COMP%]:not(form){border-left:5px solid #a94442}\"]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}