{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let UserService = /*#__PURE__*/(() => {\n  class UserService {\n    constructor(httpClient) {\n      this.httpClient = httpClient;\n      this.baseURL = \"http://35.170.243.30:8080/api/v1/Users\";\n      this.baseURL1 = \"http://35.170.243.30:8080/api/v1/Users/email\";\n    }\n    isValid() {\n      throw new Error('Method not implemented.');\n    }\n    getUserById(id) {\n      throw new Error('Method not implemented.');\n    }\n    LoginUserFromRemote(user) {\n      return this.httpClient.post(\"http://35.170.243.30:8080/login\", user);\n    }\n    authentication(user) {\n      return this.httpClient.get(\"http://35.170.243.30:8080/userrole\");\n    }\n    getUserList() {\n      return this.httpClient.get(`${this.baseURL}`);\n    }\n    createUser(user) {\n      return this.httpClient.post(`${this.baseURL}`, user);\n    }\n    getUsersById(id) {\n      return this.httpClient.get(`${this.baseURL}/${id}`);\n    }\n    edituser(id, user) {\n      return this.httpClient.put(`${this.baseURL}/${id}`, user);\n    }\n    getUserbyemailId(emailId) {\n      return this.httpClient.get(`${this.baseURL1}/${emailId}`);\n    }\n    deleteuser(id) {\n      return this.httpClient.delete(`${this.baseURL}/${id}`);\n    }\n  }\n  UserService.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  UserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n  return UserService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}